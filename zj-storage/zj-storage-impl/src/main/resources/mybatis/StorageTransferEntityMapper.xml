<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjft.microservice.treasurybrain.storage.repository.StorageTransferEntityMapper">
	<resultMap id="BaseResultMapper" type="com.zjft.microservice.treasurybrain.storage.po.StorageTransferEntityPO">
		<id column="ID" property="id" jdbcType="VARCHAR"/>
		<result column="RECORD_NO" property="recordNo" jdbcType="VARCHAR"/>
		<result column="CONTAINER_NO" property="containerNo" jdbcType="VARCHAR"/>
		<result column="CONTAINER_TYPE" property="containerType" jdbcType="INTEGER"/>
		<result column="ENTITY_TYPE" property="entityType" jdbcType="INTEGER"/>
		<result column="CURRENCY_TYPE" property="currencyType" jdbcType="INTEGER"/>
		<result column="CURRENCY_CODE" property="currencyCode" jdbcType="VARCHAR"/>
		<result column="DENOMINATION" property="denomination" jdbcType="INTEGER"/>
		<result column="UPPER_NO" property="upperNo" jdbcType="VARCHAR"/>
		<result column="SHELF_NO" property="shelfNo" jdbcType="VARCHAR"/>
		<result column="IS_LEAF" property="isLeaf" jdbcType="INTEGER"/>
	</resultMap>

	<resultMap id="ExtendResultMap" type="com.zjft.microservice.treasurybrain.storage.domain.StorageSortedTransferDetailDO" extends="BaseResultMapper">
		<result column="containerName" property="containerName" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="baseColumns">id, record_no, container_no, container_type, entity_type, currency_type, currency_code,
			denomination, upper_no, shelf_no, is_leaf, amount
			</sql>

	<insert id="insert" parameterType="com.zjft.microservice.treasurybrain.storage.po.StorageTransferEntityPO">
		insert into STORAGE_TRANSFER_ENTITY(ID, RECORD_NO, CONTAINER_NO, CONTAINER_TYPE, ENTITY_TYPE, AMOUNT)
		VALUES (#{id,jdbcType=VARCHAR},#{recordNo,jdbcType=VARCHAR},#{containerNo,jdbcType=VARCHAR},
		#{containerType,jdbcType=INTEGER},#{entityType,jdbcType=INTEGER},#{amount,jdbcType=DOUBLE})
	</insert>

	<select id="qryDetail" parameterType="String" resultType="com.zjft.microservice.treasurybrain.storage.domain.StorageSortedTransferDetailDO">
		select ste.*,ct.NAME as containerName
		from STORAGE_TRANSFER_ENTITY ste
		leftj CONTAINER_TYPE ct on  ct.CONTAINER_TYPE on ste.CONTAINER_TYPE = ct.CONTAINER_TYPE
		where ste.RECORD_NO = #{recordNo,jdbcType=VARCHAR} and AMOUNT &gt; 0
	</select>

	<select id="qryContainerNosInRecord" resultMap="ExtendResultMap" parameterType="string">
		select t1.RECORD_NO ,t1.CONTAINER_NO ,t1.CONTAINER_TYPE ,t1.ENTITY_TYPE ,ct.NAME containerName from (
		select t.CONTAINER_NO,t.CONTAINER_TYPE,t.RECORD_NO,t.ENTITY_TYPE,rownum
		from (
		select ste.CONTAINER_NO,ste.CONTAINER_TYPE,ste.RECORD_NO,ste.ENTITY_TYPE
		from STORAGE_TRANSFER_ENTITY ste
		where ste.RECORD_NO=#{recordNo,jdbcType = VARCHAR}
		group by ste.CONTAINER_NO,ste.CONTAINER_TYPE,ste.RECORD_NO,ste.ENTITY_TYPE
		order by ste.CONTAINER_NO asc) t) t1
		left join CONTAINER_TYPE ct on ct.CONTAINER_TYPE = t1.CONTAINER_TYPE
	</select>

	<select id="qryByRecordNoAndContainerNo" parameterType="com.zjft.microservice.treasurybrain.storage.po.StorageTransferEntityPO"
			resultMap="ExtendResultMap" >
		select <include refid="baseColumns"/>
		from STORAGE_TRANSFER_ENTITY ste
		where ste.RECORD_NO = #{recordNo,jdbcType=VARCHAR}
		and ste.CONTAINER_NO = #{containerNo,jdbcType = VARCHAR}
	</select>
</mapper>
